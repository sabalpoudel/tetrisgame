{"version":3,"sources":["helpers/tetrominos.js","components/styles/StyledCell.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledActionButton.js","components/ActionButton.js","img/bg.png","components/styles/StyledTetris.js","helpers/gameHelper.js","hooks/useStage.js","hooks/useGameStatus.js","helpers/score.js","components/DisplayControls.js","components/UpcomingTetris.js","components/Tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetrominos","tetrominos","randTetrominos","Math","floor","random","length","StyledCell","styled","div","props","type","Cell","React","memo","StyledStage","height","width","Stage","stage","pauseGame","gameOver","map","row","cell","i","className","StyledDisplay","StyledDisplayControls","Display","text","StyledActionButton","disabled","ActionButton","callback","onClick","e","StyledTetrisWrapper","bgImage","StyledTetris","createStage","Array","from","fill","smallStage","checkCollision","player","moveX","x","moveY","y","tetromino","pos","findCollisionIndex","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","p","newStage","forEach","j","collided","reduce","acc","findIndex","c","unshift","push","sweepRows","linePoints","getHighScores","localStorage","getItem","setHighScores","arr","setItem","JSON","stringify","DisplayControls","initScore","HighScore","scores","setScores","storedScore","parse","toString","padStart","StyledUpcomingTetris","StyledSmallStage","UpcomingTetris","t","tempArr","makingHeight4","_","Tetris","dropTime","setDropTime","setGameOver","setPauseGame","setPlayer","upComingTetromino","setUpComingTetromino","rotate","dir","rotated","col","r","reverse","useCallback","STAGE_WIDTH","clonedPlayer","offset","usePlayer","updatePlayerPos","playerRotate","rows","setRows","score","setScore","level","setLevel","calcScore","useGameStatus","movePlayer","console","log","drop","sort","a","b","splice","checkAndUpdateScore","move","keyCode","callPauseGame","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyUp","keyUp","onKeyDown","UseDesktop","App","deviceType","setDeviceType","ua","navigator","userAgent","test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8898245.chunk.js","sourcesContent":["export const TETROMINOS = {\n  0: { shape: [[0]], color: \"0, 0, 0\" },\n  I: {\n    shape: [\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n    ],\n    color: \"80, 227, 230\",\n  },\n  J: {\n    shape: [\n      [0, \"J\", 0],\n      [0, \"J\", 0],\n      [\"J\", \"J\", 0],\n    ],\n    color: \"36, 95, 223\",\n  },\n  L: {\n    shape: [\n      [0, \"L\", 0],\n      [0, \"L\", 0],\n      [0, \"L\", \"L\"],\n    ],\n    color: \"223, 173, 36\",\n  },\n  O: {\n    shape: [\n      [\"O\", \"O\"],\n      [\"O\", \"O\"],\n    ],\n    color: \"223, 217, 36\",\n  },\n  S: {\n    shape: [\n      [0, \"S\", \"S\"],\n      [\"S\", \"S\", 0],\n      [0, 0, 0],\n    ],\n    color: \"48, 211, 56\",\n  },\n  T: {\n    shape: [\n      [0, \"T\", 0],\n      [\"T\", \"T\", \"T\"],\n      [0, 0, 0],\n    ],\n    color: \"132, 61, 198\",\n  },\n  Z: {\n    shape: [\n      [\"Z\", \"Z\", 0],\n      [0, \"Z\", \"Z\"],\n      [0, 0, 0],\n    ],\n    color: \"227, 78, 78\",\n  },\n};\n\nexport const randomTetrominos = () => {\n  const tetrominos = \"IJLOSTZ\";\n  const randTetrominos =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetrominos];\n};\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  /* border-radius: 5px; */\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","import React from \"react\";\nimport { TETROMINOS } from \"../helpers/tetrominos\";\nimport { StyledCell } from \"./styles/StyledCell\";\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\nexport default React.memo(Cell);\n","import styled from \"styled-components\";\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${(props) => props.height},\n    calc(25vw / ${(props) => props.width})\n  );\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n  position: relative;\n  .gameStatusText {\n    left: 0;\n    right: 0;\n    top: 45%;\n    width: 100%;\n    margin: auto;\n    max-width: 25vw;\n    padding: 1.5rem 0;\n    color: lightgrey;\n    font-size: 1.5rem;\n    text-align: center;\n    position: absolute;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    background-color: #ff000070;\n  }\n`;\n","import React from \"react\";\nimport Cell from \"./Cell\";\nimport { StyledStage } from \"./styles/StyledStage\";\n\nconst Stage = ({ stage, pauseGame, gameOver }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage?.map((row) => row.map((cell, i) => <Cell key={i} type={cell[0]} />))}\n    {pauseGame && <div className=\"gameStatusText\">Game Paused !!</div>}\n    {gameOver && <div className=\"gameStatusText\">Game Over :(</div>}\n  </StyledStage>\n);\nexport default Stage;\n","import styled from \"styled-components\";\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${(props) => (props.gameOver ? \"red\" : \"#999\")};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n\nexport const StyledDisplayControls = styled.div`\n  width: 100%;\n  color: #999;\n  padding: 5px;\n  background: #000;\n  min-height: 30px;\n  font-size: 1rem;\n  align-items: center;\n  line-height: 1.5;\n  border-radius: 20px;\n  border: 4px solid #333;\n  box-sizing: border-box;\n  padding-inline-start: 0;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  p {\n    padding-left: 25px;\n  }\n  li {\n    margin-bottom: 5px;\n  }\n  .scores {\n    text-align: center;\n    border-top: 1px dashed #333;\n    border-bottom: 1px dashed #333;\n    padding: 10px 0;\n  }\n`;\n","import React from \"react\";\nimport { StyledDisplay } from \"./styles/StyledDisplay\";\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\nexport default Display;\n","import styled from \"styled-components\";\n\nexport const StyledActionButton = styled.div`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: ${(props) => (props.disabled ? \"grey\" : \"white\")};\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { StyledActionButton } from \"./styles/StyledActionButton\";\n\nconst ActionButton = ({ callback, text, disabled }) => {\n  return (\n    <StyledActionButton\n      onClick={(e) => !disabled && callback(e)}\n      disabled={disabled}\n    >\n      {text}\n    </StyledActionButton>\n  );\n};\nexport default ActionButton;\n","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from \"styled-components\";\n// BG Image\nimport bgImage from \"../../img/bg.png\";\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\nexport const SMALL_STAGE = 4;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\n  );\nexport const smallStage = Array.from(Array(SMALL_STAGE), () =>\n  new Array(SMALL_STAGE).fill(0)\n);\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player?.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      if (player.tetromino[y][x] !== 0) {\n        //check we are on actual tetromino cell\n        if (\n          !stage[y + player.pos.y + moveY] || // check our move is inside the game area width(y) we do not go through bottom\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] || // check move is inside game area width(x)\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            \"clear\" // check cell we are moving to is not clear\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n\nexport const findCollisionIndex = (player, stage) => {\n  for (let i = 1; i <= STAGE_HEIGHT; ++i) {\n    let collideAt = checkCollision(player, stage, { x: 0, y: i });\n    if (collideAt) return i - 1;\n  }\n};\n","import { useState, useEffect } from \"react\";\nimport { createStage } from \"../helpers/gameHelper\";\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    const sweepRows = (newStage) =>\n      newStage.reduce((acc, row) => {\n        if (row.findIndex((c) => c[0] === 0) === -1) {\n          setRowsCleared((p) => p + 1);\n          acc.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\n          return acc;\n        }\n        acc.push(row);\n        return acc;\n      }, []);\n    const updateStage = (p) => {\n      //first flush the stage\n      const newStage = p.map((row) =>\n        row.map((cell) => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\n      );\n      // then draw the tetromino\n      player.tetromino.forEach((row, i) => {\n        row.forEach((cell, j) => {\n          if (cell !== 0) {\n            newStage[i + player.pos.y][j + player.pos.x] = [\n              cell,\n              `${player.collided ? \"merged\" : \"clear\"}`,\n            ];\n          }\n        });\n      });\n      if (player.collided) {\n        resetPlayer();\n\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n    setStage((p) => updateStage(p));\n    return () => {};\n  }, [player, resetPlayer]);\n  return [stage, setStage, rowsCleared];\n};\n","import { useState, useEffect, useCallback } from \"react\";\nconst linePoints = [40, 100, 300, 1200];\n\nexport const useGameStatus = (rowsCleared) => {\n  const [rows, setRows] = useState(0);\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const calcScore = useCallback(() => {\n    // check if score\n    if (rowsCleared > 0) {\n      setScore((p) => p + linePoints[rowsCleared - 1] * (level + 1));\n      setRows((p) => p + rowsCleared);\n    }\n  }, [level, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","export const getHighScores = () => localStorage.getItem(\"tetrisScore\");\nexport const setHighScores = (arr) =>\n  localStorage.setItem(\"tetrisScore\", JSON.stringify(arr));\n\nexport const checkAndUpdateScore = (score) => {\n  let scores = JSON.parse(getHighScores());\n  scores.push(score);\n  scores.sort((a, b) => b - a).splice(-1);\n  setHighScores(scores);\n};\n","import React, { useEffect, useState } from \"react\";\nimport { getHighScores, setHighScores } from \"../helpers/score\";\nimport { StyledDisplayControls } from \"./styles/StyledDisplay\";\n\nconst DisplayControls = () => (\n  <StyledDisplayControls>\n    <p>Controls</p>\n    <ul>\n      <li>Pause : Enter</li>\n      <li>\n        Move right :<br /> Right Arrow{\" \"}\n      </li>\n      <li>\n        Move down :<br /> Down Arrow\n      </li>\n      <li>\n        Move left :<br /> Left Arrow\n      </li>\n      <li>\n        Rotate :<br /> Up Arrow\n      </li>\n      <li>\n        Full Drop :<br /> Space bar\n      </li>\n    </ul>\n  </StyledDisplayControls>\n);\nexport default DisplayControls;\nconst initScore = [2500, 1250, 625, 300, 0];\n// const initScore = [2000, 1000, 25, 0, 0];\nexport const HighScore = ({ gameOver }) => {\n  const [scores, setScores] = useState(initScore);\n\n  useEffect(() => {\n    const storedScore = getHighScores();\n    if (storedScore) setScores(JSON.parse(storedScore));\n    else setHighScores(initScore);\n  }, [gameOver]);\n\n  return (\n    <StyledDisplayControls>\n      <div className=\"scores\">Top 5 Scores</div>\n      {scores.map((i, j) => (\n        <div key={j} className=\"scores\">\n          Score {j + 1}: {i.toString().padStart(6, \"0\")}\n        </div>\n      ))}\n    </StyledDisplayControls>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Cell from \"./Cell\";\nimport { smallStage } from \"../helpers/gameHelper\";\n\nconst StyledUpcomingTetris = styled.div`\n  width: 100%;\n  color: #999;\n  padding: 5px;\n  display: flex;\n  font-size: 1rem;\n  min-height: 30px;\n  margin-bottom: 5px;\n  align-items: center;\n  box-sizing: border-box;\n  padding-inline-start: 0;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n`;\n\nconst StyledSmallStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${(props) => props.height},\n    calc(4vw / ${(props) => props.width})\n  );\n  width: 100%;\n  grid-gap: 1px;\n  max-width: 4vw;\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  margin-left: auto;\n  background-color: \"#000\";\n`;\n\nconst makingHeight4 = (arr) => {\n  let tempArr = [...arr];\n  if (tempArr.length === 2) {\n    tempArr.unshift([0, 0]);\n    tempArr.push([0, 0]);\n  } else if (tempArr.length === 3) {\n    tempArr.unshift([0, 0, 0]);\n  }\n  return tempArr;\n};\nconst UpcomingTetris = ({ tetromino }) => {\n  let t = makingHeight4(tetromino);\n\n  return (\n    <StyledUpcomingTetris>\n      Upcoming\n      <StyledSmallStage width={4} height={4}>\n        {smallStage?.map((row, i) =>\n          row.map((_, j) => {\n            return <Cell key={`${i}-${j}`} type={t?.[i]?.[j] || 0} />;\n          })\n        )}\n      </StyledSmallStage>\n    </StyledUpcomingTetris>\n  );\n};\nexport default React.memo(UpcomingTetris);\n","import React, { useState } from \"react\";\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport ActionButton from \"./ActionButton\";\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\nimport { useStage } from \"../hooks/useStage\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport {\n  checkCollision,\n  createStage,\n  findCollisionIndex,\n} from \"../helpers/gameHelper\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\nimport DisplayControls, { HighScore } from \"./DisplayControls\";\nimport UpcomingTetris from \"./UpcomingTetris\";\nimport { checkAndUpdateScore } from \"../helpers/score\";\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [pauseGame, setPauseGame] = useState(false);\n\n  const [\n    player,\n    updatePlayerPos,\n    resetPlayer,\n    playerRotate,\n    upComingTetromino,\n  ] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] =\n    useGameStatus(rowsCleared);\n\n  const movePlayer = (dir) => {\n    console.log({ dir });\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    //Reset Everything\n    setStage(createStage());\n    setDropTime(1000 / (level + 1) + 200);\n    resetPlayer();\n    setPauseGame(false);\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    //increase level for every 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel((p) => p + 1);\n      // increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 }))\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    else {\n      if (player.pos.y < 1) {\n        checkAndUpdateScore(score);\n        setGameOver(true);\n        setDropTime(false);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    console.log(\"keyUp\", keyCode);\n    if (keyCode === 40 || keyCode === 32) {\n      //uptArrow\n      setDropTime(1000 / (level + 1) + 200);\n    }\n  };\n  const dropPlayer = () => {\n    console.log(\"dropPlayer\");\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    console.log(\"move\", keyCode);\n    if (!gameOver && !pauseGame) {\n      if (keyCode === 37) {\n        //leftArrow\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        //rightArrow\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        //downArrow\n        dropPlayer(1);\n      } else if (keyCode === 38) {\n        //upArrow\n        playerRotate(stage, 1);\n      } else if (keyCode === 32) {\n        //space\n        updatePlayerPos({\n          x: 0,\n          y: findCollisionIndex(player, stage),\n          collided: true,\n        });\n        setDropTime(100);\n      }\n    }\n    if (!gameOver && keyCode === 13) {\n      // enter\n      callPauseGame();\n    }\n  };\n  useInterval(() => {\n    !gameOver && drop();\n  }, dropTime);\n\n  const callPauseGame = () => {\n    console.log(\"callPauseGame\");\n    if (pauseGame) {\n      setPauseGame(false);\n      setDropTime(1000 / (level + 1) + 200);\n    } else {\n      setDropTime(null);\n      setPauseGame(true);\n    }\n  };\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyUp={(e) => !gameOver && !pauseGame && keyUp(e)}\n      onKeyDown={(e) => move(e)}\n    >\n      <StyledTetris>\n        <aside>\n          <ActionButton\n            text={pauseGame ? \"|> Resume Game\" : \"II Pause Game\"}\n            callback={callPauseGame}\n            disabled={gameOver || player.tetromino.length === 1}\n          />\n          <UpcomingTetris tetromino={upComingTetromino} />\n          <DisplayControls />\n        </aside>\n        <Stage stage={stage} pauseGame={pauseGame} gameOver={gameOver} />\n\n        <aside>\n          {/* {gameOver ? (\n            <Display gameOver={gameOver} text={\"Game Over\"} />\n          ) : ( */}\n          <div>\n            <Display text={`Score ${score}`} />\n            <Display text={`Rows ${rows}`} />\n            <Display text={`Level ${level}`} />\n          </div>\n          {/* )} */}\n          <ActionButton\n            text={\n              player.tetromino.length === 1 || gameOver\n                ? \"Start Game\"\n                : \"Reset Game\"\n            }\n            callback={startGame}\n          />\n          <HighScore gameOver={gameOver} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\nexport default Tetris;\n","import { useState, useCallback } from \"react\";\nimport { checkCollision, STAGE_WIDTH } from \"../helpers/gameHelper\";\nimport { randomTetrominos, TETROMINOS } from \"../helpers/tetrominos\";\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const [upComingTetromino, setUpComingTetromino] = useState(\n    randomTetrominos().shape\n  );\n\n  const rotate = (tetromino, dir) => {\n    //transpose rows to cols\n    const rotated = tetromino.map((_, i) => tetromino.map((col) => col[i]));\n    // reverse each rows\n    if (dir > 0) return rotated.map((r) => r.reverse());\n    return rotated.reverse();\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = { ...player };\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer((p) => ({\n      ...p,\n      pos: {\n        x: (p.pos.x += x),\n        y: (p.pos.y += y),\n      },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: upComingTetromino,\n      collided: false,\n    });\n    setUpComingTetromino(randomTetrominos().shape);\n  }, [upComingTetromino]);\n\n  return [\n    player,\n    updatePlayerPos,\n    resetPlayer,\n    playerRotate,\n    upComingTetromino,\n  ];\n};\n","import { useEffect, useRef } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React, { useEffect, useState } from \"react\";\nimport Tetris from \"./components/Tetris\";\n\nconst UseDesktop = () => (\n  <div className=\"useDesktop\">\n    <div className=\"useDesktop-message\">\n      Oops!! Tetris game is currently only available at web browser :(\n    </div>\n  </div>\n);\n\nconst App = () => {\n  const [deviceType, setDeviceType] = useState(\"desktop\");\n\n  useEffect(() => {\n    const ua = navigator.userAgent;\n    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {\n      setDeviceType(\"tablet\");\n    } else if (\n      /Mobile|Android|iP(hone|od)|IEMobile|BlackBerry|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(\n        ua\n      )\n    ) {\n      setDeviceType(\"mobile\");\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {deviceType === \"desktop\" ? <Tetris /> : <UseDesktop />}\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}