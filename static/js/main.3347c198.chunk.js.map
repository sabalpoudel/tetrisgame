{"version":3,"sources":["tetrominos.js","components/styles/StyledCell.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledActionButton.js","components/ActionButton.js","img/bg.png","components/styles/StyledTetris.js","gameHelper.js","hooks/useStage.js","hooks/useGameStatus.js","components/DisplayControls.js","components/Tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetrominos","tetrominos","randTetrominos","Math","floor","random","length","StyledCell","styled","div","props","type","Cell","React","memo","StyledStage","height","width","Stage","stage","pauseGame","gameOver","map","row","cell","i","className","StyledDisplay","StyledDisplayControls","Display","text","StyledActionButton","disabled","ActionButton","callback","onClick","e","StyledTetrisWrapper","bgImage","StyledTetris","createStage","Array","from","fill","checkCollision","player","moveX","x","moveY","y","tetromino","pos","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","p","newStage","forEach","j","collided","reduce","acc","findIndex","c","unshift","push","sweepRows","linePoints","DisplayControls","Tetris","dropTime","setDropTime","setGameOver","setPauseGame","setPlayer","rotate","dir","rotated","_","col","r","reverse","useCallback","STAGE_WIDTH","clonedPlayer","offset","usePlayer","updatePlayerPos","playerRotate","rows","setRows","score","setScore","level","setLevel","calcScore","useGameStatus","movePlayer","console","log","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyUp","keyUp","onKeyDown","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3347c198.chunk.js","sourcesContent":["export const TETROMINOS = {\n  0: { shape: [[0]], color: \"0, 0, 0\" },\n  I: {\n    shape: [\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n    ],\n    color: \"80, 227, 230\",\n  },\n  J: {\n    shape: [\n      [0, \"J\", 0],\n      [0, \"J\", 0],\n      [\"J\", \"J\", 0],\n    ],\n    color: \"36, 95, 223\",\n  },\n  L: {\n    shape: [\n      [0, \"L\", 0],\n      [0, \"L\", 0],\n      [0, \"L\", \"L\"],\n    ],\n    color: \"223, 173, 36\",\n  },\n  O: {\n    shape: [\n      [\"O\", \"O\"],\n      [\"O\", \"O\"],\n    ],\n    color: \"223, 217, 36\",\n  },\n  S: {\n    shape: [\n      [0, \"S\", \"S\"],\n      [\"S\", \"S\", 0],\n      [0, 0, 0],\n    ],\n    color: \"48, 211, 56\",\n  },\n  T: {\n    shape: [\n      [0, 0, 0],\n      [\"T\", \"T\", \"T\"],\n      [0, \"T\", 0],\n    ],\n    color: \"132, 61, 198\",\n  },\n  Z: {\n    shape: [\n      [\"Z\", \"Z\", 0],\n      [0, \"Z\", \"Z\"],\n      [0, 0, 0],\n    ],\n    color: \"227, 78, 78\",\n  },\n};\n\nexport const randomTetrominos = () => {\n  const tetrominos = \"IJLOSTZ\";\n  const randTetrominos =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetrominos];\n};\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  /* border-radius: 5px; */\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","import React from \"react\";\nimport { TETROMINOS } from \"../tetrominos\";\nimport { StyledCell } from \"./styles/StyledCell\";\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\nexport default React.memo(Cell);\n","import styled from \"styled-components\";\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${(props) => props.height},\n    calc(25vw / ${(props) => props.width})\n  );\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n  position: relative;\n  .gameStatusText {\n    left: 0;\n    right: 0;\n    top: 45%;\n    width: 100%;\n    margin: auto;\n    max-width: 25vw;\n    padding: 1.5rem 0;\n    color: lightgrey;\n    font-size: 1.5rem;\n    text-align: center;\n    position: absolute;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    background-color: #ff000070;\n  }\n`;\n","import React from \"react\";\nimport Cell from \"./Cell\";\nimport { StyledStage } from \"./styles/StyledStage\";\n\nconst Stage = ({ stage, pauseGame, gameOver }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage?.map((row) => row.map((cell, i) => <Cell key={i} type={cell[0]} />))}\n    {pauseGame && <div className=\"gameStatusText\">Game Paused !!</div>}\n    {gameOver && <div className=\"gameStatusText\">Game Over :(</div>}\n  </StyledStage>\n);\nexport default Stage;\n","import styled from \"styled-components\";\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${(props) => (props.gameOver ? \"red\" : \"#999\")};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n\nexport const StyledDisplayControls = styled.div`\n  width: 100%;\n  color: #999;\n  padding: 5px;\n  background: #000;\n  min-height: 30px;\n  font-size: 1rem;\n  align-items: center;\n  line-height: 1.5;\n  border-radius: 20px;\n  border: 4px solid #333;\n  box-sizing: border-box;\n  padding-inline-start: 0;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  p {\n    padding-left: 25px;\n  }\n  li {\n    margin-bottom: 5px;\n  }\n`;\n","import React from \"react\";\nimport { StyledDisplay } from \"./styles/StyledDisplay\";\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\nexport default Display;\n","import styled from \"styled-components\";\n\nexport const StyledActionButton = styled.div`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: ${(props) => (props.disabled ? \"grey\" : \"white\")};\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { StyledActionButton } from \"./styles/StyledActionButton\";\n\nconst ActionButton = ({ callback, text, disabled }) => {\n  return (\n    <StyledActionButton\n      onClick={(e) => !disabled && callback(e)}\n      disabled={disabled}\n    >\n      {text}\n    </StyledActionButton>\n  );\n};\nexport default ActionButton;\n","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from \"styled-components\";\n// BG Image\nimport bgImage from \"../../img/bg.png\";\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\n  );\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player?.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      if (player.tetromino[y][x] !== 0) {\n        //check we are on actual tetromino cell\n        if (\n          !stage[y + player.pos.y + moveY] || // check our move is inside the game area width(y) we do not go through bottom\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] || // check move is inside game area width(x)\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            \"clear\" // check cell we are moving to is not clear\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","import { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelper\";\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    const sweepRows = (newStage) =>\n      newStage.reduce((acc, row) => {\n        if (row.findIndex((c) => c[0] === 0) === -1) {\n          setRowsCleared((p) => p + 1);\n          acc.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\n          return acc;\n        }\n        acc.push(row);\n        return acc;\n      }, []);\n    const updateStage = (p) => {\n      //first flush the stage\n      const newStage = p.map((row) =>\n        row.map((cell) => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\n      );\n      // then draw the tetromino\n      player.tetromino.forEach((row, i) => {\n        row.forEach((cell, j) => {\n          if (cell !== 0) {\n            newStage[i + player.pos.y][j + player.pos.x] = [\n              cell,\n              `${player.collided ? \"merged\" : \"clear\"}`,\n            ];\n          }\n        });\n      });\n      if (player.collided) {\n        resetPlayer();\n\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n    setStage((p) => updateStage(p));\n    return () => {};\n  }, [player, resetPlayer]);\n  return [stage, setStage, rowsCleared];\n};\n","import { useState, useEffect, useCallback } from \"react\";\nconst linePoints = [40, 100, 300, 1200];\n\nexport const useGameStatus = (rowsCleared) => {\n  const [rows, setRows] = useState(0);\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const calcScore = useCallback(() => {\n    // check if score\n    if (rowsCleared > 0) {\n      setScore((p) => p + linePoints[rowsCleared - 1] * (level + 1));\n      setRows((p) => p + rowsCleared);\n    }\n  }, [level, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import React from \"react\";\nimport { StyledDisplayControls } from \"./styles/StyledDisplay\";\n\nconst DisplayControls = () => (\n  <StyledDisplayControls>\n    <p>Controls</p>\n    <ul>\n      <li>\n        Move right :<br /> Right Arrow{\" \"}\n      </li>\n      <li>\n        Move down :<br /> Down Arrow\n      </li>\n      <li>\n        Move left :<br /> Left Arrow\n      </li>\n      <li>\n        Rotate :<br /> Up Arrow\n      </li>\n    </ul>\n  </StyledDisplayControls>\n);\nexport default DisplayControls;\n","import React, { useState } from \"react\";\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport ActionButton from \"./ActionButton\";\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\nimport { useStage } from \"../hooks/useStage\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { checkCollision, createStage } from \"../gameHelper\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\nimport DisplayControls from \"./DisplayControls\";\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [pauseGame, setPauseGame] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] =\n    useGameStatus(rowsCleared);\n\n  const movePlayer = (dir) => {\n    console.log({ dir });\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    //Reset Everything\n    setStage(createStage());\n    setDropTime(1000 / (level + 1) + 200);\n    resetPlayer();\n    setPauseGame(false);\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    console.log(\"object\");\n    //increase level for every 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel((p) => p + 1);\n      // increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 }))\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    else {\n      if (player.pos.y < 1) {\n        setGameOver(true);\n        setDropTime(false);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    console.log(\"keyUp\", keyCode);\n    if (keyCode === 40) {\n      //uptArrow\n      setDropTime(1000 / (level + 1) + 200);\n    }\n  };\n  const dropPlayer = () => {\n    console.log(\"dropPlayer\");\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    console.log(\"move\", keyCode);\n    if (keyCode === 37) {\n      //leftArrow\n      movePlayer(-1);\n    } else if (keyCode === 39) {\n      //rightArrow\n      movePlayer(1);\n    } else if (keyCode === 40) {\n      //downArrow\n      dropPlayer(1);\n    } else if (keyCode === 38) {\n      //upArrow\n      playerRotate(stage, 1);\n    }\n  };\n\n  useInterval(() => {\n    !gameOver && drop();\n  }, dropTime);\n\n  const callPauseGame = () => {\n    console.log(\"callPauseGame\");\n    if (pauseGame) {\n      setPauseGame(false);\n      setDropTime(1000 / (level + 1) + 200);\n    } else {\n      setDropTime(null);\n      setPauseGame(true);\n    }\n  };\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyUp={(e) => !gameOver && !pauseGame && keyUp(e)}\n      onKeyDown={(e) => !gameOver && !pauseGame && move(e)}\n    >\n      <StyledTetris>\n        <aside>\n          <ActionButton\n            text={pauseGame ? \"|> Resume Game\" : \"II Pause Game\"}\n            callback={callPauseGame}\n            disabled={gameOver || player.tetromino.length === 1}\n          />\n          <DisplayControls />\n        </aside>\n        <Stage stage={stage} pauseGame={pauseGame} gameOver={gameOver} />\n\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text={\"Game Over\"} />\n          ) : (\n            <div>\n              <Display text={`Score ${score}`} />\n              <Display text={`Rows ${rows}`} />\n              <Display text={`Level ${level}`} />\n            </div>\n          )}\n          <ActionButton text=\"Start Game\" callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\nexport default Tetris;\n","import { useState, useCallback } from \"react\";\nimport { checkCollision, STAGE_WIDTH } from \"../gameHelper\";\nimport { randomTetrominos, TETROMINOS } from \"../tetrominos\";\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (tetromino, dir) => {\n    //transpose rows to cols\n    const rotated = tetromino.map((_, i) => tetromino.map((col) => col[i]));\n    // reverse each rows\n    if (dir > 0) return rotated.map((r) => r.reverse());\n    return rotated.reverse();\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = { ...player };\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer((p) => ({\n      ...p,\n      pos: {\n        x: (p.pos.x += x),\n        y: (p.pos.y += y),\n      },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetrominos().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useEffect, useRef } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport Tetris from \"./components/Tetris\";\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}